name: main

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        mpi:
          - mpich
        py:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:

    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py }}

    - run: |
        # Install fftw
        case $(uname) in
          Linux)
            sudo apt update
            sudo apt install -y -q libfftw3-dev
            ;;
          Darwin)
            export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
            brew install fftw
            ;;
        esac

    - run: python -m pip install -U pip build

    - run: python -m build

    - uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - run: pip install -vvv dist/shenfun-*.whl
      env:
        CFLAGS: "-O0"

    - run: pip install -r conf/requirements-tests.txt

    - if: matrix.mpi == 'mpich' && startsWith(matrix.os, 'ubuntu')
      run: pytest tests/ --junitxml=junit/test-results.xml --cov=$(python -c "import site; print(site.getsitepackages()[0]+'/shenfun')") --cov-report=xml --cov-report=html

    - if: matrix.mpi == 'mpich' && startsWith(matrix.os, 'macos')
      run: pytest tests/

    - if: matrix.mpi == 'mpich' && startsWith(matrix.os, 'ubuntu') && matrix.py == '3.11'
      uses: codecov/codecov-action@v5
      with:
        files: coverage.xml
        name: ${{ matrix.os }}-${{ matrix.mpi }}-${{ matrix.py }}
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}      
    
    - if: matrix.mpi == 'mpich' && startsWith(matrix.os, 'ubuntu') && matrix.py == '3.11' 
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
